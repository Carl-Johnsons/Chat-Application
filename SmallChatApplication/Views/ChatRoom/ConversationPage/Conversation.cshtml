@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<style>

    .chat-box-container {
        --chat-box-container-height: 100vh;
        --user-info-container-height: 7.5vh;
        --input-message-container-height: 7.5vh;
        --message-container-height: calc(var(--chat-box-container-height) - var(--input-message-container-height) - var(--user-info-container-height));
        height: var(--chat-box-container-height);
        padding-left: 0px;
        border: 1px solid black;
    }

    .user-info-container {
        height: var(--user-info-container-height);
        border-bottom: 1px solid black;
    }

        .user-info-container .user-name-container {
            margin: 0.5rem 1rem;
        }

            .user-info-container .user-name-container p {
                font-size: 1.5rem;
                font-weight: 600;
            }

        .user-info-container .avatar-container .avatar-image {
            width: 2.8rem;
            margin: calc((var(--user-info-container-height) - 2.8rem)/2);
        }

    .message-container {
        height: var(--message-container-height);
        overflow: auto;
        background-color: #EEF0F1;
    }

        .message-container .message-item-container {
            display: flex;
        }

            .message-container .message-item-container.receiver {
                justify-content: flex-start;
            }

            .message-container .message-item-container.sender {
                justify-content: flex-end;
            }
            /* For aligining consecutive message */
            .message-container .message-item-container.receiver .message-list {
                display: flex;
                flex-direction: column;
                align-items: flex-start;
            }

            .message-container .message-item-container.sender .message-list {
                display: flex;
                flex-direction: column;
                align-items: flex-end;
            }


            .message-container .message-item-container .message-item {
                display: flex;
            }

            .message-container .message-item-container .avatar-image {
                width: 2.8rem;
                margin: 0 0.5rem;
            }

            .message-container .message-item-container .message {
                width: fit-content;
                max-width: 40rem;
                padding: 0.3rem 0.5rem;
                margin: 0.2rem 0rem;
                border: 1px solid black;
                border-radius: 0.7rem;
            }

            .message-container .message-item-container.sender .message {
                background-color: #E5EFFF;
            }

            .message-container .message-item-container.receiver .message {
                background-color: white;
            }

            .message-container .message-item-container .message .user-name,
            .message-container .message-item-container .message .message-time {
                font-size: 0.8rem;
                color: #476285;
            }



            .message-container .message-item-container .message {
                padding: 0.7rem;
            }


    .input-message-container {
        height: var(--input-message-container-height);
    }

        .input-message-container .row {
            height: 100%;
        }

            .input-message-container .row .input-message {
                width: 100%;
                height: 100%;
                padding: 1rem;
            }

            .input-message-container .row .btn-send-message {
                width: 100%;
                height: 100%;
                font-size: x-large;
                font-weight: bold;
            }

</style>




<div class="chat-box-container">

    <div class="user-info-container d-flex">
        <div class="avatar-container">
            <img class="avatar-image" src="/img/user.png" />
        </div>
        <div class="user-name-container">
            <p> Group 2 </p>
        </div>
    </div>


    @* Using viewbag to display data *@
    <div class="message-container">

        <div class="message-item-container sender">
            <div class="message-item">
                <div class="message-list">

                    <div class="message-row">
                        <div class="message ">
                            <div class="message-content">
                                Helloaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa @ViewBag._userName
                                asfhasfjasfhkjasf
                                asfjhasfkjashf
                                askfasfhasfjhsaf
                                asfakshfasf

                                asfhasjfsaf
                                asjhfasjf
                                sajfhasfashjfashjfasfkhasfkjhaskjfhasfkjhaskjfhasfkjhasfkjh
                            </div>
                            <div class="message-time">
                                11:00
                            </div>
                        </div>
                    </div>
                    <div class="message-row">
                        <div class="message ">
                            <div class="message-content">
                                Helloaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa @ViewBag._userName
                            </div>
                            <div class="message-time">
                                11:00
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="message-item-container receiver">
            <div class="message-item">
                <div class="user-avatar">
                    <img class="avatar-image" src="~/img/user.png" />
                </div>
                <div class="message-list">
                    <div class="message-row">

                        <div class="message">
                            <div class="user-name">
                                Lê Thị B
                            </div>
                            <div class="message-content">
                                Helloaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa @ViewBag._userName
                                asfhasfjasfhkjasf
                                asfjhasfkjashf
                                askfasfhasfjhsaf
                                asfakshfasf

                                asfhasjfsaf
                                asjhfasjf
                                sajfhasfashjfashjfasfkhasfkjhaskjfhasfkjhaskjfhasfkjhasfkjh
                            </div>
                            <div class="message-time">
                                11:00
                            </div>
                        </div>

                    </div>

                    <div class="message-row">
                        <div class="message">
                            <div class="message-content">
                                Helloaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa @ViewBag._userName
                            </div>
                            <div class="message-time">
                                11:00
                            </div>
                        </div>
                    </div>
                    <div class="message-row">
                        <div class="message">
                            <div class="message-content">
                                Helloaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa @ViewBag._userName
                            </div>
                            <div class="message-time">
                                11:00
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="input-message-container">
        <div class="row">
            <div class="col-md-10">
                <input class="input-message" />
            </div>
            <div class="col-md-2">
                <button class="btn-secondary btn-send-message">Gửi</button>
            </div>
        </div>
    </div>
</div>




<script>
    $(document).ready(function () {
        const CHAT_BOX_CONTAINER = $(".chat-box-container");
        const MESSAGE_CONTAINER = CHAT_BOX_CONTAINER.find(".message-container");
        const btnSendMessage = CHAT_BOX_CONTAINER.find("button.btn-send-message");
        const inputSendMessage = CHAT_BOX_CONTAINER.find("input.input-message");

        btnSendMessage.click(function () {
            let messageValue = inputSendMessage.val();
            if (messageValue === null || messageValue.length === 0) {
                return;
            }
        });

        // public int MessageId { get; set; }

        // public int SenderId { get; set; }

        // public string ? Content { get; set; }

        // public DateTime Time { get; set; }

        // public string MessageType { get; set; } = null!;

        // public string MessageFormat { get; set; } = null!;

        let messageList = {
            message: [
                {
                    id: 1,
                    senderName: "Đứca",
                    content: "Message 1",
                    time: "10:01",
                    receiverName: "World"
                },
                {
                    id: 2,
                    senderName: "Đứca",
                    content: "Message 2",
                    time: "10:01",
                    receiverName: "World"
                },
                {
                    id: 3,
                    senderName: "World",
                    content: "Message 3",
                    time: "10:01",
                    receiverName: "Đứca"
                },
                {
                    id: 4,
                    senderName: "World",
                    content: "Message 4",
                    time: "23:00",
                    receiverName: "Đứca"
                },
                {
                    id: 5,
                    senderName: "Hello",
                    content: "Message 5",
                    time: "23:00",
                    receiverName: "Đứca"
                },
                {
                    id: 6,
                    senderName: "Lol",
                    content: "Message 6",
                    time: "23:00",
                    receiverName: "Đứca"
                },
                {
                    id: 7,
                    senderName: "Đứca",
                    content: "Message 7",
                    time: "10:01",
                    receiverName: "World"
                },
                {
                    id: 8,
                    senderName: "Đứca",
                    content: "Message 8",
                    time: "10:01",
                    receiverName: "World"
                },
                {
                    id: 9,
                    senderName: "Đứca",
                    content: "Message 9",
                    time: "10:01",
                    receiverName: "World"
                }
            ]
        };

        let user = {
            name: "Đứca",
            gender: "Nam",
            DoB: "10-02-2003",
            phoneNumber: "+84123",
            backgroundImgURL: "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
            avatarURL: "https://static2-images.vnncdn.net/files/publish/2022/12/8/meo-1-1416.jpg",
        };
        let user2 = {
            name: "World",
            gender: "Nam",
            DoB: "10-02-2003",
            phoneNumber: "+84123",
            backgroundImgURL: "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
            avatarURL: "https://static2-images.vnncdn.net/files/publish/2022/12/8/meo-1-1416.jpg",
        };



        renderConversation(messageList.message, user);



        // <div class="message-item">
        //     <div class="user-avatar">
        //         <img class="avatar-image" src="~/img/user.png" />
        //     </div>
        //     <div class="message-list">
        //         <div class="message-row">
        //             <div class="message">
        //                 <div class="user-name">
        //                     Lê Thị B
        //                 </div>
        //                 <div class="message-content">
        //                     Helloaaaaa
        //                 </div>
        //                 <div class="message-time">
        //                     11:00
        //                 </div>
        //             </div>
        //         </div>
        //         <div class="message-row">
        //             <div class="message">
        //                 <div class="message-content">
        //                     Helloaaaaaaa
        //                 </div>
        //                 <div class="message-time">
        //                     11:00
        //                 </div>
        //             </div>
        //         </div>
        //     </div>
        // </div>

        function renderConversation(messageObjectList, currentUserObject) {
            console.log("renderConversation: messageObjectList " + messageObjectList.length);
            let currentUserName = currentUserObject.name;
            let lastSenderName = messageObjectList[0].senderName;
            let countSameUserMessage = 0;
            let isSender = false;

            let startIndex = 0;
            let endIndex = 0;

            while (true) {
                //Handle the last message
                if (endIndex == messageObjectList.length) {
                    isSender = (currentUserObject.name === messageObjectList[startIndex].senderName);
                    let subMessageList = messageObjectList.slice(startIndex, endIndex);
                    let messageItemContainer = renderMessageItemContainer(subMessageList, isSender);
                    $(MESSAGE_CONTAINER).append(messageItemContainer);
                    break;
                }

                if (messageObjectList[endIndex].senderName === messageObjectList[startIndex].senderName) {
                    endIndex += 1;
                } else {
                    isSender = (currentUserObject.name === messageObjectList[startIndex].senderName);
                    let subMessageList = messageObjectList.slice(startIndex, endIndex);
                    let messageItemContainer = renderMessageItemContainer(subMessageList, isSender);
                    $(MESSAGE_CONTAINER).append(messageItemContainer);

                    //update startIndex
                    startIndex = endIndex;
                }

            }


        }


        function renderMessageItemContainer(messageObjectList, isSender) {
            console.log("renderMessageItemContainer: " + messageObjectList.length);
            let messageItemContainer = generateElement("div", "message-item-container " + (isSender ? "sender" : "receiver"));

            let messageItem = generateElement("div", "message-item");

            let messageList = generateElement("div", "message-list");
            $(messageItem).append(messageList);
            $(messageItemContainer).append(messageItem);
            if (isSender) {
                let userAvatar = generateElement("div", "user-avatar");
                let imgAvatar = generateElement("img", "avatar-image");
                //load data here
                $(messageItem).append(userAvatar);
                $(userAvatar).append(imgAvatar);
            }

            let messageRow = renderMessageRow(messageObjectList, isSender);
            $(messageList).append(messageRow);

            return messageItemContainer;
        }

        function renderMessageRow(messageObjectList, isSender) {
            console.log("renderMessageRow");
            let messageRow = generateElement("div", "message-row");
            for (let i = 0; i < messageObjectList.length; i++) {
                let message = renderMessage(messageObjectList[i], (i == 0 ? true : false), isSender);
                $(messageRow).append(message);
            }
            return messageRow;
        }

        function renderMessage(messageObject, isFirstMessage, isSender) {
            console.log("renderMessage");
            let message = generateElement("div", "message");
            // Only first message has name
            if (isFirstMessage) {
                let userName = generateElement("div", "user-name");

                $(userName).text(messageObject.senderName);
                $(message).append(userName);
            }

            let messageContent = generateElement("div", "message-content");
            $(messageContent).text(messageObject.content);
            let messageTime = generateElement("div", "message-time");
            $(messageTime).text(messageObject.time);

            $(message).append(messageContent);
            $(message).append(messageTime);
            return message;
        }


        function generateElement(eleName, className) {
            let element = document.createElement(eleName);
            element.className = className;
            return element;
        }

    });
</script>