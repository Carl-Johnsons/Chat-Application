#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
# Copy pre-build lib
COPY ["./data/nuget", "./PostService.API/nuget"]

COPY ["./solutions/PostSolution/src/PostService.API/PostService.API.csproj", "./PostService.API/"]
COPY ["./solutions/PostSolution/src/PostService.Application/PostService.Application.csproj", "./PostService.Application/"]
COPY ["./solutions/PostSolution/src/PostService.Infrastructure/PostService.Infrastructure.csproj", "./PostService.Infrastructure/"]
COPY ["./solutions/PostSolution/src/PostService.Domain/PostService.Domain.csproj", "./PostService.Domain/"]
COPY ["./solutions/Contract/Contract/bin/Release/net8.0/Contract.dll", "Contract/"]

WORKDIR /src/PostService.API
RUN dotnet restore "./PostService.API.csproj" --packages "./nuget" --verbosity normal

COPY ["./solutions/PostSolution/src/","/src/"]
RUN dotnet build "./PostService.API.csproj" --packages "./nuget" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./PostService.API.csproj" --packages "./nuget" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "PostService.API.dll"]