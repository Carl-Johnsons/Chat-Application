apiVersion: v1
kind: PersistentVolume
metadata:
  name: rabbitmq-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: slow
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /tmp
    server: 172.17.0.2

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    NAME: rabbitmq
    kompose.cmd: C:\Program Files\kcompose\kompose.exe --file .\docker-compose-resolved.yaml convert -o kubernetes-configs
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        NAME: rabbitmq
        kompose.cmd: C:\Program Files\kcompose\kompose.exe --file .\docker-compose-resolved.yaml convert -o kubernetes-configs
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS
              value: "true"
          envFrom:
            - secretRef:
                name: general-secret 
          image: rabbitmq:4.0.2-management
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                - rabbitmq-diagnostics -q ping
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
          name: service-bus
          ports:
            - containerPort: 5672
              protocol: TCP
            - containerPort: 15672
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-cm0
      initContainers:
        - name: init-rabbitmq
          image: rabbitmq:4.0.2-management
          command: ["sh", "-c", "chown -R rabbitmq:rabbitmq /var/lib/rabbitmq"]
      hostname: rabbitmq
      restartPolicy: Always
      volumes:
        - name: rabbitmq-cm0
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
