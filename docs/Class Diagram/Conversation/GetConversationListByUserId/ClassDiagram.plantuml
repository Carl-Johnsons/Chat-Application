@startuml 
hide circle

class BaseApiController {
    #ISender _sender
    #HttpContextAccessor _httpContextAccessor
}

class ConversationController {
    +async Task<IActionResult> GetConversationListByUserId()
}

class GetConversationListByUserIdQuery {
    +Guid UserId
}

class GetConversationListByUserIdQueryHandler {
    -readonly IApplicationDbContext _context
    +async Task<Result<ConversationsResponseDTO>> Handle(GetConversationListByUserIdQuery request, CancellationToken cancellationToken)
}

class IApplicationDbContext {
    +DbSet<Conversation> Conversations
}

class ApplicationDbContext {
    +DbSet<Conversation> Conversations
    #override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
}

class Result {
    +bool IsFailure
    +bool IsSuccess
    +IEnumerable<Error> Errors
    #Result(bool isSuccess, IEnumerable<Error> errors)
    #Result(bool isSuccess, Error error)
    +void ThrowIfFailure()
    +static Result Success()
    +static Result Failure(Error err)
    +static Result Failure(IEnumerable<Error> errs)
}

class "Result<T>" {
    +T Value
    +static Result<T> Success(T value)
    +static new Result<T?> Failure(Error error)
    +static new Result<T?> Failure(IEnumerable<Error> errs)
}

class Error {
    +static readonly Error None
    +static implicit operator Result(Error err)
}

class ConversationUserResponseDTO {
    +Guid UserId
    +string Role
    +DateTime? ReadTime
}

class GroupConversationResponseDTO {
    +string Name
    +string? ImageURL
    +string? InviteURL
}

class ConversationResponseDTO {
    +Guid Id
    +string Type
    +DateTime CreatedAt
    +DateTime UpdatedAt
    +virtual List<ConversationUserResponseDTO> Users
}

class BaseEntity {
    +Guid Id
}

class BaseAuditableEntity{
    +DateTime CreatedAt
    +DateTime UpdatedAt
}

class Conversation {
    +string Type
    +virtual List<ConversationUser> Users
}

class ConversationUser {
    +Guid ConversationId
    +Guid UserId
    +string Role 
    +DateTime? ReadTime
    +virtual Conversation Conversation
}

ConversationController --|> BaseApiController
ConversationController --> GetConversationListByUserIdQuery
GetConversationListByUserIdQueryHandler --> GetConversationListByUserIdQuery
GetConversationListByUserIdQueryHandler --> Result
GetConversationListByUserIdQueryHandler --> IApplicationDbContext
GetConversationListByUserIdQueryHandler --> ConversationUserResponseDTO
GetConversationListByUserIdQueryHandler --> ConversationResponseDTO
GetConversationListByUserIdQueryHandler --> GroupConversationResponseDTO
GroupConversationResponseDTO --|> ConversationResponseDTO
IApplicationDbContext <|.. ApplicationDbContext
Result <|-- Error
Result <|-- "Result<T>"
ApplicationDbContext --> ConversationUser
ApplicationDbContext --> Conversation
ConversationUser --|> BaseEntity
Conversation --|> BaseAuditableEntity
Conversation *-- ConversationUser
BaseAuditableEntity --|>BaseEntity
@enduml