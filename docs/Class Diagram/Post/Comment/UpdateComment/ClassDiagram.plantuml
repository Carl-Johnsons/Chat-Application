@startuml 
hide circle

class BaseApiController {
    #ISender _sender
    #HttpContextAccessor _httpContextAccessor
}

class CommentsController {
    +async Task<IActionResult> Update([FromBody] UpdateCommentDTO updateCommentDTO)
}

class UpdateCommentCommand {
    +Guid CommentId
    +string Content
}

class UpdateCommentCommandHandler {
    -readonly IApplicationDbContext _context
    -readonly IUnitOfWork _unitOfWork
    +async Task<Result> Handle(UpdateCommentCommand request, CancellationToken cancellationToken)
}

class IApplicationDbContext {
    +DbSet<Comment> Comments
    +DbSet<Post> Posts
    +DbSet<PostComment> PostComments
}

class ApplicationDbContext {
    +DbSet<Comment> Comments
    +DbSet<Post> Posts
    +DbSet<PostComment> PostComments
    #override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
}

class Result {
    +bool IsFailure
    +bool IsSuccess
    +IEnumerable<Error> Errors
    #Result(bool isSuccess, IEnumerable<Error> errors)
    #Result(bool isSuccess, Error error)
    +void ThrowIfFailure()
    +static Result Success()
    +static Result Failure(Error err)
    +static Result Failure(IEnumerable<Error> errs)
}

class Error {
    +static readonly Error None
    +static implicit operator Result(Error err)
}

class IUnitOfWork {
    Task SaveChangeAsync(CancellationToken cancellationToken = default)
}

class UnitOfWork {
    -readonly ApplicationDbContext _context
    +Task SaveChangeAsync(CancellationToken cancellationToken = default)
}

class PostError {
    +static Error NotFound
    +static Error UserNotFound
    +static Error AlreadyInteractedPost
    +static Error NotInteractedPost
}

class CommentError {
    +static Error NotFound
}

class UpdateCommentDTO {
    +Guid CommentId
    +string Content
}

class BaseEntity {
    +Guid Id
}

class BaseAuditableEntity{
    +DateTime CreatedAt
    +DateTime UpdatedAt
}

class Comment {
    +string Comment
    +Guid UserId
}

class PostComment {
    +Guid PostId
    +Guid CommentId
    +virtual Post Post
    +virtual Comment Comment
}

class Post {
    +string Content
    +bool Active
    +Guid UserId
}

CommentsController --|> BaseApiController
CommentsController --> UpdateCommentCommand
CommentsController --> UpdateCommentDTO
UpdateCommentCommandHandler --> UpdateCommentCommand
UpdateCommentCommandHandler --> Result
UpdateCommentCommandHandler --> IUnitOfWork
UpdateCommentCommandHandler --> IApplicationDbContext
IUnitOfWork <|.. UnitOfWork
IApplicationDbContext <|.. ApplicationDbContext
Result <|-- Error
Error -- PostError
Error -- CommentError
ApplicationDbContext --> Comment
ApplicationDbContext --> PostComment
ApplicationDbContext --> Post
Comment --|> BaseAuditableEntity
Post --|> BaseAuditableEntity
BaseAuditableEntity --|> BaseEntity
PostComment --* Post
PostComment --* Comment
@enduml