@startuml 
hide circle
skinparam classAttributeIconSize 0

class BaseApiController {
    #_sender: ISender
    #_httpContextAccessor: HttpContextAccessor
}

class PostsController {
    +GetInteraction(Guid id): Task<IActionResult>
}

class GetInteractionByPostIdQuery {
    +PostId: Guid
}

class GetInteractionByPostIdQueryHandler {
    -_context: IApplicationDbContext
    +Handle(GetInteractionByPostIdQuery request, CancellationToken cancellationToken): Task<Result<List<PostInteract>?>> 
}

class IApplicationDbContext {
    +Posts: DbSer<Post> 
    +Interactions: DbSet<Interaction>
    +PostInteracts: DbSet<PostInteract>
}

class ApplicationDbContext {
    +Posts: DbSer<Post> 
    +Interactions: DbSet<Interaction>
    +PostInteracts: DbSet<PostInteract>
    #OnConfiguring(DbContextOptionsBuilder optionsBuilder): void
}

class Result {
    +IsFailure: bool
    +IsSuccess: bool
    +Errors: IEnumerable<Error>
    #Result(bool isSuccess, IEnumerable<Error> errors)
    #Result(bool isSuccess, Error error)
    +ThrowIfFailure(): void
    +{static} Success(): Result
    +{static} Failure(Error err): Result
    +{static} Failure(IEnumerable<Error> errs): Result
}

class "Result<T>" {
    +Value: T
    +{static} Success(T value): Result<T>
    +{static} Failure(Error error): Result<T?>
    +{static} Failure(IEnumerable<Error> errs): Result<T?>
}

class Error {
    +{static} None: Error 
    +{static} Result(Error err): implicit operator
}

class PostError {
    +{static} NotFound: Error
    +{static} UserNotFound: Error
    +{static} AlreadyInteractedPost: Error
    +{static} NotInteractedPost: Error
}

class BaseEntity {
    +Id: Guid
}

class BaseAuditableEntity{
    +CreatedAt: DateTime
    +UpdatedAt: DateTime
}

class Post {
    +Content: string
    +Active: bool
    +UserId: Guid
}

class Interaction {
    +Value: string
    +Code: string
    +Gif: string
}

class PostInteract {
    +PostId: Guid
    +InteractionId: Guid
    +UserId: Guid
    +Post: Post
    +Interaction: Interaction
}

'==== Get Post Interaction====
'API Layer
PostsController --|> BaseApiController
PostsController --> GetInteractionByPostIdQuery\
'Application Layer
GetInteractionByPostIdQueryHandler --> GetInteractionByPostIdQuery
GetInteractionByPostIdQueryHandler --> Result
GetInteractionByPostIdQueryHandler --> IApplicationDbContext
'Domain Layer
Result <|-- Error
Result <|-- "Result<T>"
Error -- PostError
Interaction --|> BaseEntity
Post --|> BaseAuditableEntity
BaseAuditableEntity --|> BaseEntity
PostInteract --* Post
PostInteract --* Interaction
'Infrastructure Layer
IApplicationDbContext <|.. ApplicationDbContext
ApplicationDbContext --> Post
ApplicationDbContext --> Interaction
ApplicationDbContext --> PostInteract
@enduml