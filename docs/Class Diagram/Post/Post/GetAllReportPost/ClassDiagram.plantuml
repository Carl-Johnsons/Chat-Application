@startuml 
hide circle

class BaseApiController {
    #ISender _sender
    #HttpContextAccessor _httpContextAccessor
}

class PostsController {
    +async Task<IActionResult> GetAllReportPost()
}

class GetListReportPostQuery {}

class GetListReportPostQueryHandler {
    -readonly IApplicationDbContext _context
    +async Task<Result<List<PostReportListDTO>?>> Handle(GetListReportPostQuery request, CancellationToken cancellationToken)
}

class IApplicationDbContext {
    +DbSer<Post> Posts
    +DbSet<PostReport> PostReports
}

class ApplicationDbContext {
    +DbSer<Post> Posts
    +DbSet<PostReport> PostReports
    #override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
}

class Result {
    +bool IsFailure
    +bool IsSuccess
    +IEnumerable<Error> Errors
    #Result(bool isSuccess, IEnumerable<Error> errors)
    #Result(bool isSuccess, Error error)
    +void ThrowIfFailure()
    +static Result Success()
    +static Result Failure(Error err)
    +static Result Failure(IEnumerable<Error> errs)
}

class "Result<T>" {
    +T Value
    +static Result<T> Success(T value)
    +static new Result<T?> Failure(Error error)
    +static new Result<T?> Failure(IEnumerable<Error> errs)
}

class Error {
    +static readonly Error None
    +static implicit operator Result(Error err)
}

class PostError {
    +static Error NotFound
    +static Error UserNotFound
    +static Error AlreadyInteractedPost
    +static Error NotInteractedPost
}

class PostReportListDTO {
    +Guid PostId
    +int PostCount
}

class BaseEntity {
    +Guid Id
}

class BaseAuditableEntity{
    +DateTime CreatedAt
    +DateTime UpdatedAt
}

class Post {
    +string Content
    +bool Active
    +Guid UserId
}

class PostReport {
    +Guid PostId
    +string Reason
    +Guid UserId
    +virtual Post Post
} 

PostsController --|> BaseApiController
PostsController --> GetListReportPostQuery
GetListReportPostQueryHandler --> GetListReportPostQuery
GetListReportPostQueryHandler --> Result
GetListReportPostQueryHandler --> IApplicationDbContext
GetListReportPostQueryHandler --> PostReportListDTO
IApplicationDbContext <|.. ApplicationDbContext
Result <|-- Error
Result <|-- "Result<T>"
Error -- PostError
ApplicationDbContext --> Post
ApplicationDbContext --> PostReport
PostReport --|> BaseAuditableEntity
Post --|> BaseAuditableEntity
BaseAuditableEntity --|> BaseEntity
PostReport --* Post
@enduml