@startuml 
hide circle
skinparam classAttributeIconSize 0

class BaseApiController {
    #_sender: ISender
    #_httpContextAccessor: HttpContextAccessor
}

class TagsController {
    +GetAll(): Task<IActionResult>
}

class GetAllTagsQuery {
}

class GetAllTagsQueryHandler {
    -_context: IApplicationDbContext
    +Handle(GetAllTagsQuery request, CancellationToken cancellationToken): Task<Result<List<Tag>>>
}

class IApplicationDbContext {
    +Tags: DbSet<Tag>
}

class ApplicationDbContext {
    +Tags: DbSet<Tag>
    #OnConfiguring(DbContextOptionsBuilder optionsBuilder): void
}

class Result {
    +IsFailure: bool
    +IsSuccess: bool
    +Errors: IEnumerable<Error>
    #Result(bool isSuccess, IEnumerable<Error> errors)
    #Result(bool isSuccess, Error error)
    +ThrowIfFailure(): void
    +{static} Success(): Result
    +{static} Failure(Error err): Result
    +{static} Failure(IEnumerable<Error> errs): Result
}

class "Result<T>" {
    +Value: T
    +{static} Success(T value): Result<T>
    +{static} Failure(Error error): Result<T?>
    +{static} Failure(IEnumerable<Error> errs): Result<T?>
}

class BaseEntity {
    +Id: Guid 
}

class Tag {
    +Value: string
    +Code: string
}

'==== Get All Post ====
'API Layer
TagsController --|> BaseApiController
TagsController --> GetAllTagsQuery
'Application Layer
GetAllTagsQueryHandler --> GetAllTagsQuery
GetAllTagsQueryHandler --> Result
GetAllTagsQueryHandler --> IApplicationDbContext
'Domain Layer
Result <|-- "Result<T>"
Tag --|> BaseEntity
'Infrastructure Layer
IApplicationDbContext <|.. ApplicationDbContext
ApplicationDbContext --> Tag
@enduml