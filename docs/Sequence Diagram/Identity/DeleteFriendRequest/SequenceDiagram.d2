label.style.font-color: black

classes: {
  text-black: {
    style: {
      font-color: black
    }
  }

  return arrow: {
    style: {
      stroke-dash: 3
      stroke: black
      font-color: black
    }
  }

  frame: {
    style: {
      fill: '#EAEDF0'
      stroke-width: 1
    }
  }

  label right: {
    style.font-color: black
  }
}

shape: sequence_diagram

User: {
  shape: image
  width: 50
  height: 60
  icon: https://upload.wikimedia.org/wikipedia/commons/5/5b/Robustness_Diagram_Actor.svg
}

application: <<user interaction>> \n chat application
apiGateway: <<coordinator>> \n apiGateway
identityService: <<service>> \n identityService

DB: DB

User -> application.post: 1. User request with access token
application.post -> apiGateway.post: 2. User request with access token
apiGateway.post."3. validate token success"
apiGateway.post -> identityService.post: 4. Request delete friend request

identityService.post -> identityService.post.deleteFriendRequest: 5. Get friend request
identityService.post.deleteFriendRequest -> Db.unblockUser: 6. Request database
identityService.post.deleteFriendRequest <- Db.unblockUser: 7. Database response {class: return arrow}

alt1: "alt" {
  class: frame
  if friend request id not exist: "[if friend request id not exist]" {
    class: frame
    apiGateway.post <- identityService.post.deleteFriendRequest.getUserBlock: 8A. return 400 status {class: return arrow}
    application.post <- apiGateway.post: 8A.1. return 400 status {class: return arrow}
    User <- application.post: 8A.2. Display error {class: return arrow}
  }
  if friend request id exist: "[if friend request id exist]" {
    class: frame
    identityService.post.deleteFriendRequest.getUserBlock -> identityService.post.deleteFriendRequest: 8. Delete friend request
  }
}

identityService.post.deleteFriendRequest -> DB.get: 9. Request database
identityService.post.deleteFriendRequest <- DB.get: 10. Database response {class: return arrow}

apiGateway.post <- identityService.post.deleteFriendRequest: 11. return 204 status {class: return arrow}
application.post <- apiGateway.post: 12. return 204 status {class: return arrow}
User <- application.post: 13. Notify delete friend request successfully {class: return arrow}
