label.style.font-color: black

classes: {
  text-black: {
    style: {
      font-color: black
    }
  }

  return arrow: {
    style: {
      stroke-dash: 3
      stroke: black
      font-color: black
    }
  }

  frame: {
    style: {
      fill: '#EAEDF0'
      stroke-width: 1
    }
  }

  label right: {
    style.font-color: black
  }
}

shape: sequence_diagram

User: {
  shape: image
  width: 50
  height: 60
  icon: https://upload.wikimedia.org/wikipedia/commons/5/5b/Robustness_Diagram_Actor.svg
}

application: <<user interaction>> \n chat application
apiGateway: <<coordinator>> \n apiGateway
identityService: <<service>> \n identityService

DB: "DB" {
  shape: cylinder
}

User -> application.post: 1. User request with access token
application.post -> apiGateway.post: 2. User request with access token
apiGateway.post."3. validate token success"
apiGateway.post -> identityService.get: 4. Request update user

identityService.get -> identityService.get.unblockUser: 5. GetUserBlockRelationship
identityService.get.unblockUser -> Db.unblockUser: 6. Request database
identityService.get.unblockUser <- Db.unblockUser: 7. Database response {class: return arrow}

alt1: "alt" {
  class: frame
  if user and block user relationship not existed: "[if user and block user relationship not existed]" {
    class: frame
    apiGateway.post <- identityService.get.unblockUser.getUserBlock: 12A. return 400 status {class: return arrow}
    application.post <- apiGateway.post: 12A.1. return 400 status {class: return arrow}
    User <- application.post: 12A.2. Display error {class: return arrow}
  }
  if user and block user relationship existed: "[if user and block user relationship existed]" {
    class: frame
    identityService.get.unblockUser.getUserBlock -> identityService.get.unblockUser: 13. UnBlock user {class: return arrow}
  }
}

identityService.get.unblockUser -> DB.get: 14. Request database
identityService.get.unblockUser <- DB.get: 15. Database response {class: return arrow}

apiGateway.post <- identityService.get.unblockUser: 4. return 204 status {class: return arrow}
application.post <- apiGateway.post: 2. return 204 status {class: return arrow}
User <- application.post: 1. Notify user unblock user successfully {class: return arrow}
